// body {
//   padding: 0px;
//   margin: 0px;
// }

// .container {
//   width: 1200px;
//   margin: 0 auto;

//   &::after, &::before {
//     content: '';
//     display: table;
//     clear: both;
//   }
// }

// .grid-3 {
//   width: calc(25% - 20px); // mantem os 20px de margin e padding ao diminuir a tela
//   margin-left: 10px;
//   margin-right: 10px;
//   background: rgba(0,0,0,0.5);
//   color: white;
//   float: left;
// }

// Variaveis do grid
$cols: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: 480px;

//Box sizing
*, *::after, *::before {
  box-sizing: border-box;
}

// mixins de media-querie
@mixin d($size) {
  @if $size == l {
    @media screen and (min-width: #{$l-device}) {
      @content;
    }
  } @else if $size == m {
    @media screen and (min-width: #{$m-device}) and (max-width: #{$l-device - 1 }) {
      @content;
    }
  } @else if $size == s {
    @media screen and (max-width: #{$m-device - 1}) {
      @content;
    }
  }
}

// Função do grid
@function grid($col, $offset: false) {
  $width: $col / $cols * 100 + '%';
  $result: calc(#{$width} - #{$gutter});
  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter})
  }
  @return $result;
}

// Gera as classes de grid
@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i);
  }
}

// Mixin estrutura do grid
@mixin grid-structure {
  floaT: left;
  min-height: 1px;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
  @include d(s) {
    width: 100%;
    float: none;
    margin-left: 0px;
    margin-right: 0px;
  }
}

[class^='grid-'] { //seleciona todos os itens que começa com grid-
  @include grid-structure()
}

// Gera as classes de offset
@for $i from 1 through $cols {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset; 
  }
}

@include d(s) {
  %offset {
    margin-left: 0px;
  }
}

// Mixin de clearfix
@mixin clearfix {
  &::after, &::before {
    content: '';
    display: table;
    clear: both
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0px auto;
  position: relative;
  @include d(m) {
    max-width: $m-device;
  }
  @include d(s) {
    max-width: $s-device;
    margin-left: 10px;
    margin-right: 10px;
  }
  @include clearfix;
}

.container {
  @include container;
}

@mixin row { // serve quand há div dentro de div
  position: relative;
  margin-left: -$gutter/2;
  margin-right: -$gutter/2;
  @include d(s) {
    margin-left: 0px;
    margin-right: 0px;
  }
  @include clearfix()
}

.row {
  @include row;
}